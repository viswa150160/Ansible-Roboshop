- name: install catalogue component
  hosts: catalogue
  become: yes
  tasks:
  - name: setup NPM source
    ansible.builtin.shell: "curl -sL https://rpm.nodesource.com/setup_lts.x | bash"

  - name: install node js
    ansible.builtin.yum:
      name: nodejs
      state: installed 

  - name: check roboshop user exist or not
    ansible.builtin.command: id roboshop
    register: out
    ignore_errors: true
  
  - when: out.rc != 0
    name: create user roboshop
    become: yes
    ansible.builtin.user:
     name: roboshop

  - name: check /app dir exists or not
    ansible.builtin.stat:
     path: /app
    register: directory

  - name: print the directory stat
    ansible.builtin.debug:
      msg: "output is:{{directory}}"

  - when: directory.stat.exists == False
    name: create /app directory 
    ansible.builtin.file:
      path: /app
      state: directory
  
  - name: download the catalogue artifact
    ansible.builtin.get_url:
      url:  https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp
     
  - name: unzip the catalogue
    ansible.builtin.unarchive:
     src: /tmp/catalogue.zip
     dest: /app 
     remote_src: yes
  
  - name: install dependencies
    ansible.builtin.command: npm install
    args:
     chdir: /app
    
  - name: copy catalogue service
    ansible.builtin.copy:
     src: Catalogue.Service
     dest: /etc/systemd/system/catalogue.service
  
  - name: Deman reload
    ansible.builtin.systemd:
     daemon_reload: true

  - name: copy mongo repo to yum.repos.d
    ansible.builtin.copy:
     src: mongodb.repo
     dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb
    ansible.builtin.yum:
     name: mongodb-org-shell
     state: installed

  - name: load catalogue data
    ansible.builtin.command: mongo --host mongodb.devops2024.cloud </app/schema/catalogue.js

  - name: restart catalogue
    ansible.builtin.service:
     name: catalogue
     state: restarted
     enabled: true
    





















